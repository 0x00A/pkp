COMMAND

  pkp init             Initialize a project and create a `pki.json` file.


COMMAND

  pkp sign             Generate a request for this version of this package.
                       Hashes entire codebase except for patterns found in 
                       the ignore files specified.

USAGE

  pkp sign <[module-name]|[--remote ...]> [version]

OPTIONS

  --remote <url>       The remote url of the codebase.
  --dir ./path         The path to the package's directory.
  --key ./path         The path to the public key file to use. If 
                       one is not provided, the public key from the last 
                       request is used.


COMMAND

  pkp verify           Compare a proposed hash with the actual hash of the
                       specific module or remote.

USAGE

  pkp verify <[module-name]|[--remote ...]> [version]

OPTIONS

  --remote <url>       The remote url of the codebase.


COMMAND

  pkp config           Add or create configuration for your `~/.pkp` file.


COMMAND

  pkp keys create      Generate a public/private key pair.
                       Writes the public key to the pki.json file and the 
                       private key to stdout.
     
COMMAND     
           
  pkp keys add         Add an existing public key to the pki.json file.
                       No new keys are generated, nothing to stdout.
     
OPTIONS     
     
  --public             A path to where the public key file can be read.
  --private            A path to where the private key file can be read.
